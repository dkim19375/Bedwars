//file:noinspection SpellCheckingInspection
plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id 'net.minecrell.licenser' version '0.4.1'
}

final def DEBUG = true
final def basePackage = 'me.dkim19375.bedwars.libs'

shadowJar {
    if (!DEBUG) {
        relocate("kotlin", "${basePackage}.kotlin")
        relocate("me.mattstudios.mfgui", "${basePackage}.mfgui")
        relocate("de.tr7zw.changeme.nbtapi", "${basePackage}.nbtapi")
        relocate("de.tr7zw.nbtinjector", "${basePackage}.nbtinjector")
        relocate("net.kyori", "${basePackage}.kyori")
        relocate("org.apache", "${basePackage}.apache")
        relocate("me.tigerhix.lib.scoreboard", "${basePackage}.scoreboard")
        relocate("me.dkim19375.dkim19375core", "${basePackage}.dkim19375core")
        relocate("me.katsumag.itemactionslib", "${basePackage}.itemactionslib")
        relocate("me.dkim19375.itemmovedetectionlib", "${basePackage}.itemmovedetectionlib")
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://repo.alessiodp.com/releases/' }
    maven { url = 'https://repo.mattstudios.me/artifactory/public' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://repo.dmulloy2.net/nexus/repository/public/' }
    maven { url = 'https://repo.onarandombox.com/content/groups/public/' }
    maven { url = 'https://nexus.hc.to/content/repositories/pub_releases/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    for (Project project : subprojects) {
        implementation project
    }
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding 'UTF-8'

group 'me.dkim19375'
version '1.0.0'

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'net.minecrell.licenser'

    group = parent.group
    version = parent.version

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    //noinspection GroovyAssignabilityCheck
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    compileKotlin {
        //noinspection GrUnresolvedAccess
        kotlinOptions.jvmTarget = '1.8'
    }

    license {
        header = rootProject.file("LICENSE")
        include "**/*.kt"
    }

    repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://repo.alessiodp.com/releases/' }
        maven { url = 'https://repo.mattstudios.me/artifactory/public' }
        maven { url = 'https://repo.codemc.org/repository/maven-public/' }
        maven { url = 'https://repo.dmulloy2.net/nexus/repository/public/' }
        maven { url = 'https://repo.onarandombox.com/content/groups/public/' }
        maven { url = 'https://nexus.hc.to/content/repositories/pub_releases/' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        flatDir {
            dirs 'libs'
        }
    }

    dependencies {
        implementation('de.tr7zw:item-nbt-api:2.7.1')
        implementation('de.tr7zw:nbt-injector:2.7.1')
        implementation('commons-io:commons-io:2.8.0')
        implementation('net.kyori:adventure-api:4.7.0-SNAPSHOT')
        compileOnly('org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT')
        implementation('com.github.dkim19375:dkim19375Core:3.0.2')
        implementation('net.kyori:adventure-text-serializer-gson:4.7.0')
        implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.32')
        implementation('me.mattstudios.utils:matt-framework-gui:2.0.3.3')
        implementation('com.github.dkim19375:ItemMoveDetectionLib:1.0.1')
        implementation('net.kyori:adventure-text-serializer-legacy:4.7.0')
        implementation('net.kyori:adventure-platform-bukkit:4.0.0-SNAPSHOT')
        // implementation('de.tr7zw:item-nbt-api:2.7.1')


        compileOnly('com.onarandombox.multiversecore:Multiverse-Core:2.5') {
            exclude group: 'org.mcstats.bukkit'
            exclude group: 'org.spigotmc'
            exclude group: 'org.bukkit'
            exclude group: 'net.md-5'
        }

        compileOnly('org.jetbrains:annotations:20.1.0')
        compileOnly('com.comphenix.protocol:ProtocolLib:4.6.0')
        compileOnly('com.alessiodp.parties:parties-api:3.0.4') {
            exclude group: 'org.spigotmc'
            exclude group: 'org.bukkit'
            exclude group: 'net.md-5'
        }
        implementation(fileTree('../libs'))
        // https://github.com/katsumag/ItemActionsLib
        // https://github.com/TigerHix/ScoreboardLib
    }
}

task removeBuildJars() {
    new File('build/libs').deleteDir()
}

task copyFile(type: Copy) {
    if (!new File('../.TestServers/1.8/plugins/').exists()) {
        return
    }
    new File('../.TestServers/1.8/plugins/' + project.name + '-' + project.version + '-all.jar').delete()
    from('build/libs/' + project.name + '-' + project.version + '-all.jar')
    into('../.TestServers/1.8/plugins')
    include('*.jar')
}

task copyFile_16(type: Copy) {
    if (!new File('../.TestServers/1.16/plugins/').exists()) {
        return
    }
    new File('../.TestServers/1.16/plugins/' + project.name + '-' + project.version + '-all.jar').delete()
    from('build/libs/' + project.name + '-' + project.version + '-all.jar')
    into('../.TestServers/1.16/plugins')
    include('*.jar')
}

task deleteAll() {
    for (File file : new File('../.TestServers/1.16/plugins').listFiles()) {
        if (file.name.startsWith(project.name)) {
            file.delete()
        }
    }
    for (File file : new File('../.TestServers/1.8/plugins').listFiles()) {
        if (file.name.startsWith(project.name)) {
            file.delete()
        }
    }
}

shadowJar.dependsOn licenseFormat