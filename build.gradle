//file:noinspection SpellCheckingInspection
//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.5.30'
    id 'org.cadixdev.licenser' version '0.6.1'
    id 'io.github.slimjar' version '1.3.0'
}

final def basePackage = 'me.dkim19375.bedwars.libs'
final def annotationsPackage = "${basePackage}.annotations"

slimJar {
    relocate 'kotlin', "${basePackage}.kotlin"
    relocate 'reactor', "${basePackage}.reactor"
    relocate 'net.kyori', "${basePackage}.kyori"
    relocate 'javassist', "${basePackage}.javassist"
    relocate 'io.github.slimjar', "${basePackage}.slimjar"
    relocate 'org.yaml.snakeyaml', "${basePackage}.snakeyaml"
    relocate 'dev.triumphteam.gui', "${basePackage}.triumphgui"
    relocate 'me.dkim19375.dkimcore', "${basePackage}.dkimcore"
    relocate 'de.tr7zw.changeme.nbtapi', "${basePackage}.nbtapi"
    relocate 'de.tr7zw.nbtinjector', "${basePackage}.nbtinjector"
    relocate 'org.apache.commons.io', "${basePackage}.commons.io"
    relocate 'de.tr7zw.annotations', "${annotationsPackage}.tr7zw"
    relocate 'org.reactivestreams', "${basePackage}.reactivestreams"
    relocate 'me.mattstudios.config', "${basePackage}.triumphconfig"
    relocate 'me.tigerhix.lib.scoreboard', "${basePackage}.scoreboard"
    relocate 'me.katsumag.itemactionslib', "${basePackage}.itemactionslib"
    relocate 'me.dkim19375.dkimbukkitcore', "${basePackage}.dkimbukkitcore"
    relocate 'org.jetbrains.annotations', "${annotationsPackage}.jetbrains"
    relocate 'org.intellij.lang.annotations', "${annotationsPackage}.intellij"
    relocate 'me.dkim19375.itemmovedetectionlib', "${basePackage}.itemmovedetectionlib"
}

static def addRepositories(Project project) {
    project.repositories {
        mavenCentral()
        maven { url = 'https://jitpack.io' }
        maven { url = 'https://repo.alessiodp.com/releases/' }
        maven { url = 'https://repo.essentialsx.net/releases/' }
        maven { url = 'https://repo.essentialsx.net/snapshots/' }
        maven { url = 'https://repo.mattstudios.me/artifactory/public' }
        maven { url = 'https://repo.codemc.org/repository/maven-public/' }
        maven { url = 'https://repo.dmulloy2.net/nexus/repository/public/' }
        maven { url = 'https://repo.onarandombox.com/content/groups/public/' }
        maven { url = 'https://nexus.hc.to/content/repositories/pub_releases/' }
        maven { url = 'https://oss.sonatype.org/content/repositories/releases/' }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url = 'https://s01.oss.sonatype.org/content/repositories/releases/' }
        maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
        maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
        maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
        flatDir {
            dirs 'libs'
        }
    }
}

final dependencyStrings = [
        'de.tr7zw:item-nbt-api:2.8.0',
        'de.tr7zw:nbt-injector:2.8.0',
        'commons-io:commons-io:2.11.0',
        'net.kyori:adventure-api:4.8.1',
        'org.jetbrains:annotations:22.0.0',
        'dev.triumphteam:triumph-gui:3.0.3',
        'me.mattstudios:triumph-config:1.0.5-SNAPSHOT',
        'net.kyori:adventure-text-serializer-gson:4.8.1',
        'net.kyori:adventure-text-serializer-legacy:4.8.1',
        'io.github.dkim19375:item-move-detection-lib:1.1.5',
        'net.kyori:adventure-platform-bukkit:4.0.0-SNAPSHOT',
        'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1',
        'org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.5.1'
]

repositories {
    addRepositories(project)
}

dependencies {
    for (Project project : subprojects) {
        implementation project
    }
    dependencyStrings.forEach { slim it }
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding 'UTF-8'

group 'me.dkim19375'
version '1.0-SNAPSHOT'

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.cadixdev.licenser'
    apply plugin: 'io.github.slimjar'

    group = parent.group
    version = parent.version

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    compileKotlin {
        //noinspection GrUnresolvedAccess
        kotlinOptions.jvmTarget = '1.8'
    }

    license {
        header = rootProject.file 'HEADER'
        include '**/*.kt'
        include '**/*.java'
        exclude '**/DefaultFontInfo.kt'
    }

    repositories {
        addRepositories(project)
        maven {
            url 'https://repo.maven.apache.org/maven2'
            name 'Maven Central'
        }
    }

    dependencies {
        dependencyStrings.forEach { compileOnly it }
        implementation slimjar('1.2.6')
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.30'


        implementation('io.github.dkim19375:dkim-bukkit-core:3.3.6') {
            exclude group: 'org.jetbrains.kotlin'
            exclude group: 'org.jetbrains.kotlinx'
        }

        compileOnly 'me.clip:placeholderapi:2.10.10'
        compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
        compileOnly 'com.comphenix.protocol:ProtocolLib:4.6.0'
        compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
        compileOnly('com.onarandombox.multiversecore:Multiverse-Core:2.5') {
            exclude group: 'org.mcstats.bukkit'
            exclude group: 'org.spigotmc'
            exclude group: 'org.bukkit'
            exclude group: 'net.md-5'
        }
        compileOnly('com.alessiodp.parties:parties-api:3.1.8') {
            exclude group: 'org.spigotmc'
            exclude group: 'org.bukkit'
            exclude group: 'net.md-5'
        }
        implementation fileTree('../libs')
        // https://github.com/TigerHix/ScoreboardLib
    }
}

task removeBuildJars() {
    new File('build/libs').deleteDir()
}

task copyFile(type: Copy) {
    if (!new File('../.TestServers/1.8/plugins/').exists()) {
        return
    }
    new File('../.TestServers/1.8/plugins/' + project.name + '-' + project.version + '-all.jar').delete()
    from('build/libs/' + project.name + '-' + project.version + '-all.jar')
    into('../.TestServers/1.8/plugins')
    include('*.jar')
}

task copyFile_17(type: Copy) {
    if (!new File('../.TestServers/1.17/plugins/').exists()) {
        return
    }
    new File('../.TestServers/1.17/plugins/' + project.name + '-' + project.version + '-all.jar').delete()
    from('build/libs/' + project.name + '-' + project.version + '-all.jar')
    into('../.TestServers/1.17/plugins')
    include('*.jar')
}

task deleteAll() {
    for (File file : new File('../.TestServers/1.17/plugins').listFiles()) {
        if (file.name.startsWith(project.name)) {
            file.delete()
        }
    }
    for (File file : new File('../.TestServers/1.16/plugins').listFiles()) {
        if (file.name.startsWith(project.name)) {
            file.delete()
        }
    }
    for (File file : new File('../.TestServers/1.8/plugins').listFiles()) {
        if (file.name.startsWith(project.name)) {
            file.delete()
        }
    }
}

shadowJar.dependsOn licenseFormat